name: Terraform Backend Setup & Deploy

on:
  push:
    branches:
      - main

jobs:
  plan:
    name: Create S3 Backend + Terraform Plan
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      BUCKET_NAME: "terraform-state-pratyushaa94"

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create Backend S3 Bucket if not exists
        run: |
          if ! aws s3api head-bucket --bucket $BUCKET_NAME 2>/dev/null; then
            echo "Creating backend S3 bucket..."
            aws s3api create-bucket --bucket $BUCKET_NAME --region $AWS_DEFAULT_REGION
            aws s3api put-bucket-versioning \
              --bucket $BUCKET_NAME \
              --versioning-configuration Status=Enabled
            aws s3api put-bucket-encryption \
              --bucket $BUCKET_NAME \
              --server-side-encryption-configuration '{
                "Rules": [
                  {
                    "ApplyServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }'
          else
            echo "S3 bucket already exists."
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var-file="environments/dev.tfvars" -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

      - name: Attach Manual Cost Summary
        run: |
          echo "## Estimated Monthly Costs (Dev Environment)" > manual-cost-summary.md
          echo "| Resource       | Quantity | Pricing (approx) | Total Cost |" >> manual-cost-summary.md
          echo "|----------------|----------|------------------|------------|" >> manual-cost-summary.md
          echo "| S3 Bucket      | 1        | \$0.023 / GB     | \$0.10     |" >> manual-cost-summary.md
          echo "| PUT Requests   | 1000     | \$0.005 / 1000   | \$0.005    |" >> manual-cost-summary.md
          echo "| Versioning     | Enabled  | N/A              | \$0.00     |" >> manual-cost-summary.md
          echo "" >> manual-cost-summary.md
          echo "**Total Estimate:** ~\$0.10â€“\$0.20/month" >> manual-cost-summary.md

      - name: Upload Manual Cost Summary
        uses: actions/upload-artifact@v4
        with:
          name: cost-summary
          path: manual-cost-summary.md

  apply:
    name: Terraform Apply (Manual Approval)
    runs-on: ubuntu-latest
    needs: plan
    environment:
      name: dev-approval  # ðŸ‘ˆ approval gate

    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Apply
        run: terraform apply tfplan
